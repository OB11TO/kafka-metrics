version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    healthcheck:
      test: [ "CMD-SHELL", "echo stat | nc -w 2 localhost 2181" ]
      interval: 20s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:29092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_gorch:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:bff27f1b5bfc7ab1af339e829f0905df57f206df
    container_name: kafka_ui
    ports:
      - "8182:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "system_performance_metrics"
      POSTGRES_USER: "migration_user"
      POSTGRES_PASSWORD: "mgr_user"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - postgres-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@ob11to.ru"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres-network

volumes:
  pg-data:
  pgadmin-data:
  kafka_gorch:

networks:
  postgres-network:
    driver: bridge